[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "deploy_on_onto_ns"

[project]
name = "deploy-on-onto-ns"
authors = [
    {name = "Casper Welzel Andersen", email = "casper.w.andersen@sintef.no"},
]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Private :: Do Not Upload",
]
keywords = ["dlite", "mongodb"]
requires-python = "~=3.10"
dynamic = ["version", "description"]

dependencies = [
    "fastapi ~=0.109.0",
    # "python-dotenv ~=1.0",
    "pydantic ~=2.5",
    "pyyaml ~=6.0",
    "uvicorn >=0.21.1,<1",
]

[project.optional-dependencies]
testing = [
    # "pytest ~=7.2",
    # "pytest-cov ~=4.0",
]
dev = [
    "pre-commit ~=3.6",
]

[project.urls]
Home = "https://github.com/CasperWA/deploy-on-onto-ns"
Documentation = "https://github.com/CasperWA/deploy-on-onto-ns?tab=readme-ov-file#readme"
Source = "https://github.com/CasperWA/deploy-on-onto-ns"
"Issue Tracker" = "https://github.com/CasperWA/deploy-on-onto-ns/issues"
Changelog = "https://CasperWA.github.io/deploy-on-onto-ns/latest/CHANGELOG"

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_configs = true
show_error_codes = true
allow_redefinition = true
check_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.ruff.lint]
extend-select = [
    "E",  # pycodestyle
    "F",  # Pyflakes
    "B",  # flake8-bugbear
    "I",  # isort
    "BLE",  # flake8-blind-except
    "ARG",  # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "ICN",  # flake8-import-conventions
    "G",  # flake8-logging-format
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "RET",  # flake8-return
    "RUF",  # Ruff-specific
    "SIM",  # flake8-simplify
    "YTT",  # flake8-2020
    "EXE",  # flake8-executable
    "PYI",  # flake8-pyi
]
ignore = [
    "PLR",  # Design related pylint codes
    "PLW0127",  # pylint: Self-assignment of variables
]

# Import __future__.annotations for all Python files.
isort.required-imports = ["from __future__ import annotations"]

# [tool.ruff.lint.per-file-ignores]
# "tests/**" = [
#     "BLE",  # flake8-blind-except
# ]

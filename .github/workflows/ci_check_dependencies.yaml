name: CI - Check dependencies

on:
  schedule:
    - cron: "48 4 * * 1"
  workflow_dispatch:

jobs:
  check-dependencies:
    name: External
    uses: SINTEF/ci-cd/.github/workflows/ci_check_pyproject_dependencies.yml@v2.6.0
    if: github.repository_owner == 'CasperWA'
    with:
      git_username: "Casper Welzel Andersen"
      git_email: "casper+github@welzel.nu"
      permanent_dependencies_branch: "main"
      python_version: "3.10"
      install_extras: "[dev]"
      pr_labels: "CI/CD"
    secrets:
      PAT: ${{ secrets.CI_TOKEN }}


  check-pre-commit-hooks:
    name: Update pre-commit hooks
    runs-on: ubuntu-latest
    if: github.repository_owner == 'CasperWA'

    env:
      GIT_USER: "github-actions[bot]"
      GIT_EMAIL: "github-actions[bot]@users.noreply.github.com"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools wheel flit
          pip install -e .[dev]

      - name: Auto-update pre-commit hooks
        run: |
          pre-commit autoupdate

          if [ -n "$(git status --porcelain .pre-commit-config.yaml)" ]; then
            echo "UPDATES=true" >> $GITHUB_ENV
            echo "Updates to pre-commit hooks found."
          else
            echo "UPDATES=false" >> $GITHUB_ENV
            echo "No updates to pre-commit hooks."
          fi

      - name: Run pre-commit hooks
        if: env.UPDATES == 'true'
        continue-on-error: true  # No matter the result here, still create a PR.
        run: SKIP=pylint pre-commit run --all-files

      - name: Commit changes
        if: env.UPDATES == 'true'
        run: |
          git config --global user.name "${{ env.GIT_USER }}"
          git config --global user.email "${{ env.GIT_EMAIL }}"

          git add --all .
          git commit -m "Update pre-commit hooks"

      - name: Create PR
        if: env.UPDATES == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.CI_TOKEN }}
          committer: "${{ env.GIT_USER }} <${{ env.GIT_EMAIL }}>"
          author: "${{ env.GIT_USER }} <${{ env.GIT_EMAIL }}>"
          branch: ci/update-pre-commit-hooks
          delete-branch: true
          title: "[Auto-generated] Update pre-commit hooks"
          body: |
            ### Update `pre-commit` hooks

            Automatically created PR to update the `pre-commit` hooks.

            To do:
              - [ ] Review changes
              - [ ] Ensure CI checks pass
              - [ ] Squash and merge PR
          labels: "CI/CD"

      - name: Information
        run: 'echo "${{ steps.cpr.outputs.pull-request-operation }} PR #${{ steps.cpr.outputs.pull-request-number }}: ${{ steps.cpr.outputs.pull-request-url }}"'
